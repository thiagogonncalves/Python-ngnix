# Evita a criação de arquivos pyc
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Define o diretório de trabalho
WORKDIR /app

# Copia apenas os arquivos necessários para instalar as dependências
COPY requirements.txt /app/

# Instala as dependências do sistema antes para garantir o cache do Docker
RUN apt update && apt-get upgrade -y && \
    apt install -y \
    firebird3.0-server \
    libsasl2-dev \
    python3-dev \
    libldap2-dev \
    libssl-dev \
    gcc \
    python3-gi \
    python3-gi-cairo \
    gir1.2-gtk-3.0 \
    nginx  # Instala o Nginx

# Inicia o serviço necessário (em produção pode ser melhor usar um serviço externo)
RUN service firebird3.0 start

# Instala as dependências do Python
RUN /usr/local/bin/python -m pip install --upgrade pip && \
    pip install -r requirements.txt --upgrade

# Copia o restante do código da aplicação
COPY . /app

# Coleta arquivos estáticos
RUN python manage.py collectstatic --noinput

# Copia o arquivo de configuração do Nginx
COPY nginx.conf /etc/nginx/nginx.conf

# Exponha a porta 8000 para a aplicação Django e a porta 80 para o Nginx
EXPOSE 8000 80

# Define o comando padrão para rodar o Nginx em segundo plano e o servidor Django
CMD ["sh", "-c", "service nginx start && python manage.py runserver 0.0.0.0:8000"]

